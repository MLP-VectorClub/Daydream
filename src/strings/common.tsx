/* eslint-disable max-len */
import { plural } from 'src/utils/plural';

export const common = {
  header: {
    signin: 'Sign In',
    signout: 'Sign Out',
    register: 'Register',
  },
  footer: {
    lastUpdate: 'Last update',
    unknown: 'Unknown',
    showGitInfo: 'Show version information',
    hideGitInfo: 'Hide version information',
    commitTitle: 'See exactly what was changed and why',
    frontend: 'Frontend',
    backend: 'Backend',
    created: 'created',
    visitGithub: 'Visit the GitHub repository',
    privacyPolicy: 'Privacy Policy',
    contactUs: 'Contact Us',
    api: 'API Docs',
    apiMeaning: 'Application Programming Interface â€“ for developers',
    translatorsWanted: 'Translators wanted!',
  },
  titles: {
    colorGuide: 'Color Guide',
    colorGuideByName: '{{guideName}} Color Guide',
    colorGuideByNameAndPage: 'Page {{page}} - {{guideName}} Color Guide',
    colorGuideList: 'Color Guide List',
    profile: 'Profile',
    profileByName: (name: string): string => `${name} - Profile`,
    yourProfile: 'Your Profile',
    show: 'Show',
    events: 'Events',
    about: 'About',
    admin: 'Admin',
    404: 'Not Found',
    latestEpisode: 'Latest Episode',
    privacyPolicy: 'Privacy Policy',
    users: 'Users',
    account: 'Account',
    home: 'Home',
  },
  error: {
    withStatus: 'Error {{statusCode}}!',
    withoutStatus: 'Unknown Error!',
    404: {
      title: '404 Not Found',
      lead: 'This page does not exist',
    },
  },
  sidebar: {
    welcome: 'Welcome!',
    backendDown: 'Signing in is not possible at the moment. Please check back later.',
    sessionUpdating: 'Updating your session',
    authCheck: 'Checking if you are logged in',
    signOut: 'Sign Out',
    signIn: 'Sign In',
    joinDiscord: 'Join Discord',
    confirmSignOut: 'Are you sure you want to sign out?',
    csrfInitializing: 'Fetching CSRF token',
    authInitializing: 'Fetching user data',
    usefulLinks: 'Useful links',
  },
  contact: {
    header: 'Contact Us',
    howTo: 'How to contact us',
    useAnyBelow: 'You can use any of the following methods to reach out to us:',
  },
  guestUserName: 'Curious Pony',
  roleLabel: {
    guest: 'Guest',
    user: 'DeviantArt User',
    member: 'Club Member',
    assistant: 'Assistant',
    staff: 'Staff',
    admin: 'Administrator',
    developer: 'Site Developer',
  },
  auth: {
    signInTitle: "Let's get you signed in",
    signUpTitle: 'Create an account',
    noAccountYet: 'No account yet? Create one here!',
    alreadyHaveAccount: 'Already have an account? Sign in here!',
    accountBenefits: "An account allows you to customize the site's behavior, with many more features yet to come.",
    name: 'Display Name',
    nameHelp: (min: number, max: number): string => `Only English letters, digits, dashes and underscores. Must be between ${min} and ${max} characters. Can be changed later.`,
    email: 'E-Mail Address',
    emailHelp: (): JSX.Element => <>Use a valid e-mail address that can receive messages to ensure you do not lose access to your account. This address must be confirmed after signing up. <strong>We will not send you spam.</strong></>,
    password: 'Password',
    passwordHelp: (min: number): string => `Must be at least ${min} characters long and not commonly used.`,
    rememberMe: 'Keep me signed in',
    signInButton: 'Sign In',
    registerButton: 'Create Account',
    invalidCredentials: 'Incorrect e-mail address or password',
    rateLimited: (count: number): string => `Too many signin attempts, please try again in ${count} ${plural(count, 'second', 'seconds')}`,
    hidePassword: 'Hide Password',
    showPassword: 'Show Password',
    forgotPassword: 'Forgot password?',
    pwResetNotYetAvailable: 'The password reset feature is not available yet',
    socialSignIn: {
      alternatively: 'alternatively',
      signInWith: (provider: string): string => `Sign in with ${provider}`,
    },
  },
  validation: {
    required: 'Please fill in this field',
    tooLong: 'Cannot be longer than {{count}} characters',
    tooShort: 'Cannot be shorter than {{count}} characters',
    email: 'Please enter a valid e-mail address',
    acceptPrivacyPolicy: 'You must accept the privacy policy',
    format: 'Please match the specified format',
  },
  pagination: {
    page: 'Page',
    go: 'Go',
  },
  tmdbDisclaimer: 'This product uses the TMDb API but is not endorsed or certified by TMDb.',
  wipNotice: 'This website is a work-in-progress, for our current live site please visit',
};
