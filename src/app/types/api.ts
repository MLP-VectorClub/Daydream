/*
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 * DO NOT EDIT THIS FILE DIRECTLY! - GENERATE IT USING npm run gen-api-types INSTEAD
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

export interface ServerResponse {
  /**
   * Indicates whether the request was successful
   */
  status: boolean;
  /**
   * A message explaining the outcome of the request, typically used for errors
   */
  message?: string;
}

/**
 * A query parameter used for specifying which page is currently being displayed
 */
export type PageNumber = number;

export interface PageData {
  pagination: {
    currentPage: number;
    totalPages: number;
    totalItems: number;
    itemsPerPage: number;
  };
}

export type PagedServerResponse = ServerResponse & PageData;

/**
 * Represents an entry in the color guide
 */
export interface Appearance {
  id: number;
  label: string;
  added: string;
  notes: string;
}

/**
 * An array of appearances under the appearances key
 */
export interface ArrayOfAppearances {
  appearances: (Appearance)[];
}

export type GuideName = 'pony' | 'eqg';

/**
 * Represents an authenticated user
 */
export interface User {
  id: string;
  label?: string;
  role: any;
  avatar_url: string;
}

/**
 * List of roles a user can have
 */
export type UserRole = 'guest' | 'user' | 'member' | 'assistant' | 'staff' | 'admin' | 'developer';

/**
 * A user's data under the user key
 */
export interface ValueOfUser {
  user: (User)[];
}

export interface AppControllersApiAppearancesControllerGetAllRequest {
  guide: GuideName;
  page: PageNumber;
  q: string;
}
export type AppControllersApiAppearancesControllerGetAllResult = PagedServerResponse &
  ArrayOfAppearances;

export interface AppControllersApiUsersControllerGetMeRequest {
}
export type AppControllersApiUsersControllerGetMeResult = ServerResponse & ValueOfUser;
